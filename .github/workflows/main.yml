# This is a basic workflow to help you get started with Actions

name: CI Ignoring Directories

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Create Release
        uses: actions/create-release@v1.1.4
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
          tag_name: ${{ github.ref }}
          # The name of the release. For example, `Release v1.0.1`
          release_name: Test release for ${{ github.ref }}
          body: just testing

      # Runs a set of commands using the runners shell
      - name: Create Nested Directories
        run: |
          mkdir -p artifacts/dir1/
          echo "testing" | tee artifacts/dir1/file{1..5} > /dev/null
          mkdir -p artifacts/dir2/
          echo "still testing" | tee artifacts/dir2/anotherfile{1..5} > /dev/null
          echo "last test" | tee artifacts/lastfile{1..3} > /dev/null
          ls -R artifacts
          
      - name: Upload Artifacts
        uses: ./ # Uses an action in the root directory
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["artifacts/**/*"]'
